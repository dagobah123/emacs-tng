;;; keybindings.el --- keybindings file  -*- lexical-binding: t; -*-
;;; Commentary:
;;; Keybindings file

;;; Code:

(defvar my-prefix-map (make-sparse-keymap) "Main keymap")
(defvar my-prefix-map-avy (make-sparse-keymap) "Avy keymap")
(defvar my-prefix-map-editor (make-sparse-keymap) "Editor keymap")
(defvar my-prefix-map-magit (make-sparse-keymap) "Magit keymap")
(defvar my-prefix-map-org (make-sparse-keymap) "Org keymap")
(defvar my-prefix-map-projectile (make-sparse-keymap) "Projectile keymap")
(defvar my-prefix-map-rings (make-sparse-keymap) "Rings keymap")
(defvar my-prefix-map-search (make-sparse-keymap) "Search keymap")
(defvar my-prefix-map-theme (make-sparse-keymap) "Theme keymap")

(define-key my-prefix-map-theme (kbd "D") #'color-change-dark)
(define-key my-prefix-map-theme (kbd "L") #'color-change-light)
(define-key my-prefix-map-theme (kbd "b") #'blue)
(define-key my-prefix-map-theme (kbd "c") #'casablanca)
(define-key my-prefix-map-theme (kbd "d") #'default)
(define-key my-prefix-map-theme (kbd "e") #'eclipse)
(define-key my-prefix-map-theme (kbd "g") #'gray)
(define-key my-prefix-map-theme (kbd "h") #'high-contrast)
(define-key my-prefix-map-theme (kbd "l") #'low-chroma)
(define-key my-prefix-map-theme (kbd "n") #'neon)
(define-key my-prefix-map-theme (kbd "r") #'red)

(define-key my-prefix-map-search (kbd "1") #'my-grep-in-project-at-least-one-match-in-line)
(define-key my-prefix-map-search (kbd "2") #'my-grep-in-project-multiple-matches-in-line)
(define-key my-prefix-map-search (kbd "3") #'my-grep-in-project-exact)
(define-key my-prefix-map-search (kbd "4") #'my-grep-in-project-at-least-one-match-in-line-case-sensitive)
(define-key my-prefix-map-search (kbd "a") #'ag)
(define-key my-prefix-map-search (kbd "c") #'counsel-projectile-git-grep)
(define-key my-prefix-map-search (kbd "o") #'occur)
(define-key my-prefix-map-search (kbd "s") #'swiper-all)

(define-key my-prefix-map-editor (kbd "<down>") #'drag-stuff-down)
(define-key my-prefix-map-editor (kbd "<left>") #'scroll-right)
(define-key my-prefix-map-editor (kbd "<right>") #'scroll-left)
(define-key my-prefix-map-editor (kbd "<up>") #'drag-stuff-up)
(define-key my-prefix-map-editor (kbd "C") #'my-goto-class)
(define-key my-prefix-map-editor (kbd "D") #'my-copy-line-at-point)
(define-key my-prefix-map-editor (kbd "F") #'my-find-file-at-point-in-project)
(define-key my-prefix-map-editor (kbd "M") #'my-goto-member)
(define-key my-prefix-map-editor (kbd "c") #'my-class-overview)
(define-key my-prefix-map-editor (kbd "d") #'my-duplicate-line)
(define-key my-prefix-map-editor (kbd "e") #'eval-buffer)
(define-key my-prefix-map-editor (kbd "f") #'mark-defun)
(define-key my-prefix-map-editor (kbd "h") #'global-hl-line-mode)
(define-key my-prefix-map-editor (kbd "i") #'iedit)
(define-key my-prefix-map-editor (kbd "l") #'display-line-numbers-mode)
(define-key my-prefix-map-editor (kbd "m") #'imenu)
(define-key my-prefix-map-editor (kbd "n") #'my-new-line)
(define-key my-prefix-map-editor (kbd "o") #'olivetti-mode)
(define-key my-prefix-map-editor (kbd "p") #'mark-paragraph)
(define-key my-prefix-map-editor (kbd "s") #'sort-lines)
(define-key my-prefix-map-editor (kbd "t") #'transpose-lines)
(define-key my-prefix-map-editor (kbd "w") #'whitespace-mode)

(define-key my-prefix-map-projectile (kbd "a") #'counsel-projectile-org-agenda)
(define-key my-prefix-map-projectile (kbd "c") #'counsel-projectile-org-capture)
(define-key my-prefix-map-projectile (kbd "d") #'ivy-dispatching-done)
(define-key my-prefix-map-projectile (kbd "f") #'projectile-find-file)
(define-key my-prefix-map-projectile (kbd "i") #'projectile-ibuffer)
(define-key my-prefix-map-projectile (kbd "p") #'projectile-switch-project)
(define-key my-prefix-map-projectile (kbd "s") #'my-project-status)

(define-key my-prefix-map-rings (kbd "k") #'helm-show-kill-ring)
(define-key my-prefix-map-rings (kbd "m") #'helm-all-mark-rings)

(define-key my-prefix-map-org (kbd "a") #'org-agenda)
(define-key my-prefix-map-org (kbd "c") #'org-capture)

(define-key my-prefix-map-avy (kbd ",") #'avy-goto-char-in-line)
(define-key my-prefix-map-avy (kbd "L") #'avy-linum-mode)
(define-key my-prefix-map-avy (kbd "a") #'dabbrev-completion)
(define-key my-prefix-map-avy (kbd "l") #'avy-goto-line)

(define-key my-prefix-map-magit (kbd "b") #'magit-blame)
(define-key my-prefix-map-magit (kbd "L") #'magit-log-buffer-file)
(define-key my-prefix-map-magit (kbd "l") #'my-magit-log)
(define-key my-prefix-map-magit (kbd "m") #'my-magit)

(define-key my-prefix-map (kbd "C-l") #'er/expand-region)
(define-key my-prefix-map (kbd "a") my-prefix-map-avy)
(define-key my-prefix-map (kbd "b") #'helm-bookmarks)
(define-key my-prefix-map (kbd "e") my-prefix-map-editor)
(define-key my-prefix-map (kbd "h") #'hydra-master/body)
(define-key my-prefix-map (kbd "l") #'recenter-top-bottom)
(define-key my-prefix-map (kbd "m") my-prefix-map-magit)
(define-key my-prefix-map (kbd "o") my-prefix-map-org)
(define-key my-prefix-map (kbd "p") my-prefix-map-projectile)
(define-key my-prefix-map (kbd "q") 'goto-last-change)
(define-key my-prefix-map (kbd "r") my-prefix-map-rings)
(define-key my-prefix-map (kbd "s") my-prefix-map-search)
(define-key my-prefix-map (kbd "t") my-prefix-map-theme)

(global-set-key (kbd "<C-down>") 'my-scroll-down-center)
(global-set-key (kbd "<C-next>") 'projectile-next-project-buffer)
(global-set-key (kbd "<C-prior>") 'projectile-previous-project-buffer)
(global-set-key (kbd "<C-up>") 'my-scroll-up-center)
(global-set-key (kbd "<f5>") 'dap-step-in)
(global-set-key (kbd "<f6>") 'dap-next)
(global-set-key (kbd "<f7>") 'dap-java-debug)
(global-set-key (kbd "<f8>") 'dap-continue)
(global-set-key (kbd "<f9>") 'dap-breakpoint-toggle)
(global-set-key (kbd "C-,") 'avy-goto-char-2)
(global-set-key (kbd "C-M-,") #'(lambda() (interactive) (scroll-right 10)))
(global-set-key (kbd "C-M-.") #'(lambda() (interactive) (scroll-left 10)))
(global-set-key (kbd "C-M-b") 'helm-buffers-list)
(global-set-key (kbd "C-b") 'projectile-switch-to-buffer)
(global-set-key (kbd "C-c c") 'dabbrev-completion)
(global-set-key (kbd "C-f") 'projectile-find-file)
(global-set-key (kbd "C-i") 'ivy-dispatching-call)
(global-set-key (kbd "C-l") my-prefix-map)
(global-set-key (kbd "C-p") 'projectile-switch-project)
(global-set-key (kbd "C-x <down>") 'windmove-down)
(global-set-key (kbd "C-x <left>") 'windmove-left)
(global-set-key (kbd "C-x <right>") 'windmove-right)
(global-set-key (kbd "C-x <up>") 'windmove-up)
(global-set-key (kbd "C-x C-b") 'helm-buffers-list)
(global-set-key (kbd "C-x b") 'helm-buffers-list)

;(defun my-dabbrev-setup ()
;  (unless (derived-mode-p 'org-mode 'org-agenda-mode 'magit-status-mode 'magit-log-mode 'magit-revision-mode)
;    (local-set-key (kbd "<tab>") #'dabbrev-completion)))
;(add-hook 'after-change-major-mode-hook #'my-dabbrev-setup)

(defun default ()
  (interactive)
  (my-set-theme INDEX-DEFAULT))

(defun eclipse ()
  (interactive)
  (my-set-theme INDEX-ECLIPSE))

(defun color-change-light ()
  (interactive)
  (my-set-theme INDEX-COLOR-CHANGE-LIGHT))

(defun high-contrast ()
  (interactive)
  (my-set-theme INDEX-HIGH-CONTRAST))

(defun gray ()
  (interactive)
  (my-set-theme INDEX-GRAY))

(defun low-chroma ()
  (interactive)
  (my-set-theme INDEX-LOW-CHROMA))

(defun blue ()
  (interactive)
  (my-set-theme INDEX-BLUE))

(defun neon ()
  (interactive)
  (my-set-theme INDEX-NEON))

(defun color-change-dark ()
  (interactive)
  (my-set-theme INDEX-COLOR-CHANGE-DARK))

(defun red ()
  (interactive)
  (my-set-theme INDEX-RED))

(defun casablanca ()
  (interactive)
  (my-set-theme INDEX-CASABLANCA))

(defun color-change-dark ()
  (interactive)
  (my-set-theme INDEX-COLOR-CHANGE-DARK))

;;; keybindings.el ends here
